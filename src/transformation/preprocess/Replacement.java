package transformation.preprocess;

import java.util.List;

import minizinc.representation.statement.decls.VarDecl;

/**
 * Represents a replacement generated by the preprocessing
 * 
 * @author rafa
 *
 */
public class Replacement {
	private String sqlName;
	private VarDecl decl;
	private List<VarDecl> newDecls;
	private List<Boolean> mixed;
	private List<String> columnNames;

	/**
	 * @param sqlName
	 *            Name of the associated relational table
	 * @param decl
	 *            Substituted declaration
	 * @param newDecls
	 *            New var declarations that substitute decl.
	 * @param columnName
	 * @param mixed
	 *            For each element in newDecls indicate if its a mixed variable
	 */
	public Replacement(String sqlName, VarDecl decl, List<VarDecl> newDecls, List<String> columnNames,
			List<Boolean> mixed) {
		this.sqlName = sqlName;
		this.decl = decl;
		this.newDecls = newDecls;
		this.mixed = mixed;
		this.columnNames = columnNames;
	}

	public List<String> getColumnNames() {
		return columnNames;
	}

	public String getSqlName() {
		return sqlName;
	}

	public VarDecl getDecl() {
		return decl;
	}

	public List<VarDecl> getNewDecls() {
		return newDecls;
	}

	public List<Boolean> getMixed() {
		return mixed;
	}

}
